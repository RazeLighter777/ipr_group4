apiVersion: v1
kind: Service
metadata:
  name: baas-service
  labels:
    app: baas
spec:
  selector:
    app: nginx
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: LoadBalancer
---
# NGINX static html server and reverse proxy to /api for the baas service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 2
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.19.0
          ports:
            - containerPort: 80
          volumeMounts:
            - name: html
              mountPath: /usr/share/nginx/html
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: html
          configMap:
            name: html
        - name: nginx-conf
          configMap:
            name: nginx-conf
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: html
data:
  index.html: |
    <!DOCTYPE html>
    <html>
    <head>
      <title>NGINX</title>
    </head>
    <body>
      <h1>NGINX</h1>
      <p>Welcome to Blog as a Service!</p>
    </body>
    </html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  default.conf: |
    server {
      listen 80;
      server_name localhost;
      location / {
        root /usr/share/nginx/html;
        index index.html;
      }
      location /api {
        proxy_pass http://baas-api:5000;
        rewrite ^/api/(.*) /$1 break;
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  labels:
    app: baas
spec:
  selector:
    matchLabels:
      app: mysql
  strategy:
    type: Recreate
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:5.7
          env:
            - name: MYSQL_DATABASE
              value: baas
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PASSWORD
              value: password
          ports:
            - containerPort: 3306
          volumeMounts:
            - name: mysql-persistent-storage
              mountPath: /var/lib/mysql
      volumes:  
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 20Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: baas
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: baas
  labels:
    app: baas
spec:
  replicas: 3
  selector:
    matchLabels:
      app: baas
  template:
    metadata:
      labels:
        app: baas
    spec:
      containers:
        - name: baas
          image: localhost:32000/baas:latest
          ports:
            - containerPort: 5000
          env:
            - name: MYSQL_HOST
              value: mysql
            - name: MYSQL_USER
              value: root
            - name: MYSQL_PASSWORD
              value: password
            - name: MYSQL_DATABASE
              value: baas
---
apiVersion: v1
kind: Service
metadata:
  name: baas-api
  labels:
    app: baas
spec:
  selector:
    app: baas
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  type: ClusterIP